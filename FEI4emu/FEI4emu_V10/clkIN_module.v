// Coregen Verilog wrapper file modified by HDL Designer

////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2009 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 11.1
//  \   \         Application : xaw2verilog
//  /   /         Filename : clkIN.v
// /___/   /\     Timestamp : 03/09/2010 14:19:08
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: xaw2verilog -st C:\\DOCUME~1\Laura\LOCALS~1\Temp\coregen_Laura\coregen\project\.\clkIN.xaw C:\\DOCUME~1\Laura\LOCALS~1\Temp\coregen_Laura\coregen\project\.\clkIN
//Design Name: clkIN
//Device: xc3s1600e-5fg320
//
// Module clkIN
// Generated by Xilinx Architecture Wizard
// Written for synthesis tool: Precision
`timescale 1ns / 1ps

module clkIN(CLKIN_N_IN, 
             CLKIN_P_IN, 
             CLKFX_OUT, 
             CLKIN_IBUFGDS_OUT, 
             CLK0_OUT, 
             LOCKED_OUT); 

    input CLKIN_N_IN;
    input CLKIN_P_IN;
   output CLKFX_OUT;
   output CLKIN_IBUFGDS_OUT;
   output CLK0_OUT;
   output LOCKED_OUT;
   
   wire CLKFB_IN;
   wire CLKFX_BUF;
   wire CLKIN_IBUFGDS;
   wire CLK0_BUF;
   wire GND_BIT;
   
   assign GND_BIT = 0;
   assign CLKIN_IBUFGDS_OUT = CLKIN_IBUFGDS;
   assign CLK0_OUT = CLKFB_IN;
   BUFG CLKFX_BUFG_INST (.I(CLKFX_BUF), 
                         .O(CLKFX_OUT)); 
   IBUFGDS CLKIN_IBUFGDS_INST (.I(CLKIN_P_IN), 
                               .IB(CLKIN_N_IN), 
                               .O(CLKIN_IBUFGDS)); 
   BUFG CLK0_BUFG_INST (.I(CLK0_BUF), 
                        .O(CLKFB_IN)); 
   // Period Jitter (unit interval) for block DCM_SP_INST = 0.11 UI
   // Period Jitter (Peak-to-Peak) for block DCM_SP_INST = 0.71 ns
   DCM_SP DCM_SP_INST (.CLKFB(CLKFB_IN), 
                       .CLKIN(CLKIN_IBUFGDS), 
                       .DSSEN(GND_BIT), 
                       .PSCLK(GND_BIT), 
                       .PSEN(GND_BIT), 
                       .PSINCDEC(GND_BIT), 
                       .RST(GND_BIT), 
                       .CLKDV(), 
                       .CLKFX(CLKFX_BUF), 
                       .CLKFX180(), 
                       .CLK0(CLK0_BUF), 
                       .CLK2X(), 
                       .CLK2X180(), 
                       .CLK90(), 
                       .CLK180(), 
                       .CLK270(), 
                       .LOCKED(LOCKED_OUT), 
                       .PSDONE(), 
                       .STATUS()); 
   //pragma attribute DCM_SP_INST CLK_FEEDBACK 1X
   //pragma attribute DCM_SP_INST CLKDV_DIVIDE 2.0
   //pragma attribute DCM_SP_INST CLKFX_DIVIDE 1
   //pragma attribute DCM_SP_INST CLKFX_MULTIPLY 4
   //pragma attribute DCM_SP_INST CLKIN_DIVIDE_BY_2 FALSE
   //pragma attribute DCM_SP_INST CLKIN_PERIOD 25.000
   //pragma attribute DCM_SP_INST CLKOUT_PHASE_SHIFT NONE
   //pragma attribute DCM_SP_INST DESKEW_ADJUST SYSTEM_SYNCHRONOUS
   //pragma attribute DCM_SP_INST DFS_FREQUENCY_MODE LOW
   //pragma attribute DCM_SP_INST DLL_FREQUENCY_MODE LOW
   //pragma attribute DCM_SP_INST DUTY_CYCLE_CORRECTION TRUE
   //pragma attribute DCM_SP_INST FACTORY_JF C080
   //pragma attribute DCM_SP_INST PHASE_SHIFT 0
   //pragma attribute DCM_SP_INST STARTUP_WAIT FALSE
   // pragma synthesis_off
   defparam DCM_SP_INST.CLK_FEEDBACK = "1X";
   defparam DCM_SP_INST.CLKDV_DIVIDE = 2.0;
   defparam DCM_SP_INST.CLKFX_DIVIDE = 1;
   defparam DCM_SP_INST.CLKFX_MULTIPLY = 4;
   defparam DCM_SP_INST.CLKIN_DIVIDE_BY_2 = "FALSE";
   defparam DCM_SP_INST.CLKIN_PERIOD = 25.000;
   defparam DCM_SP_INST.CLKOUT_PHASE_SHIFT = "NONE";
   defparam DCM_SP_INST.DESKEW_ADJUST = "SYSTEM_SYNCHRONOUS";
   defparam DCM_SP_INST.DFS_FREQUENCY_MODE = "LOW";
   defparam DCM_SP_INST.DLL_FREQUENCY_MODE = "LOW";
   defparam DCM_SP_INST.DUTY_CYCLE_CORRECTION = "TRUE";
   defparam DCM_SP_INST.FACTORY_JF = 16'hC080;
   defparam DCM_SP_INST.PHASE_SHIFT = 0;
   defparam DCM_SP_INST.STARTUP_WAIT = "FALSE";
   // pragma synthesis_on
// hds translate_on

endmodule

